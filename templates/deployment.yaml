apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Chart.Name}}-deployment
  labels: 
    app.kubernetes.io/name: {{.Chart.Name}}-deployment
    helm.sh/chart: {{.Chart.Name}}-{{.Chart.Version}}
    app.kubernetes.io/instance: {{.Release.Name}}
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{.Chart.Name}}-deployment
      app.kubernetes.io/instance: {{.Release.Name}}
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: {{.Chart.Name}}-deployment
        helm.sh/chart: {{.Chart.Name}}-{{.Chart.Version}}
        app.kubernetes.io/instance: {{.Release.Name}}
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: nginx
          image: {{.Values.image.repository}}:{{.Values.image.tag}}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPorts.http }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: http
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
            {{- if .Values.service.tls.enabled }}
            - name: nginx-tls-secret
              mountPath: /etc/certs
              readOnly: true
            {{- end }}
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: default.conf
                path: default.conf
        {{- if .Values.service.tls.enabled }}
        - name: nginx-tls-secret
          secret:
            secretName: {{.Values.service.tls.hostname}}-tls
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
        {{- end }}